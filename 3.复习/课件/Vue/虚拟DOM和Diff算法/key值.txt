1.key的使用场景
	当Vue通过v-for指令和某个可遍历数据,实现对结构的遍历时,需要给每个遍历得到的结构添加标签属性key,key中一般存入唯一标识

2.常作为key的值有哪些?
	-遍历得到的数据身上的唯一标识,例如:id
	-遍历得到的数据的下标,例如:index
	-遍历得到的数据本身,注意该数据必须是基本数据类型

3.key的作用
	粗略了解:与diff算法有关,可以提升diff算法性能
	当某个响应式数据发生变化导致页面需要更新时,此时Vue会根据最新数据,生成新的虚拟DOM树,并与旧的虚拟DOM树进行每个节点的对比(key值就是关键),
	找到可以复用的真实DOM节点,进行复用
		
		为什么是复用真实DOM?
			因为创建真实DOM所需要付出的代价,远比生成虚拟DOM来的更大

	first render:
		1.将template模版编译成为render函数(created->beforeMount)
		2.调用render函数生成虚拟DOM树
		3.根据虚拟DOM树结构,生成真实DOM树
		4.将真实DOM树的根节点替换掉页面上的app元素

	update render:
		1.调用render函数生成新的虚拟DOM树
		2.将新的虚拟DOM树和旧的虚拟DOM进行对比
		3.找到两棵树之前相同的节点,并复用旧的虚拟DOM树创建的真实DOM
		4.最终,如果有部分节点没法复用之前的旧真实DOM,那么直接根据最新的虚拟DOM,生成真实DOM
		5.将得到的真实DOM树,替换页面对应部分

		阶段2,3就是diff算法

4.如果使用index作为key值,可能会出现什么问题?
	input案例
		此案例中,diff算法的成功复用了真实DOM,但是复用错误(diff算法失效)

	商品排序功能
		此案例中,diff算法虽然有在进行比较工作,但是所有真实DOM都复用失败(明明每个商品的数据并没有发生变化),复用失败导致需要生成所有的真实DOM,
		此时diff算法不仅没有优化性能,反而拖累性能

5.使用唯一标识作为key值的好处
	只要服务器的数据不发生变化,那么前端的节点就可以一直复用下去