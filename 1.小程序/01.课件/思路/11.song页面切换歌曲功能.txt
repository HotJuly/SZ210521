需求:当用户点击上一首/下一首按钮时,自动展示并播放对应歌曲
拆解:
	1.当用户点击上一首/下一首按钮时
		绑定事件监听,事件名:tap||touchstart
	2.自动展示并播放对应歌曲
		继续拆解:
			1.如何展示歌曲信息
				只需要将歌曲的信息请求回来,更新到data中即可自动展示

			2.如何播放歌曲信息
				同之前案例

			3.如何知道对应歌曲是哪一首?
				播放列表:每日推荐页面的歌曲列表
				当前歌曲中不可能具有上一首或者下一首歌的数据

				歌曲列表数据在每日推荐页面,但是需要数据的是song页面
				Vue中两个组件之间的通信方式:
					1.Vuex
						可以将整个播放列表存入小程序的app实例中
					2.Storage
						非重要数据,不轻易存入
						存取数据性能较低
					3.原型对象
					4.路由传参
						我们总共只跳转一次路由,最多传入几首歌的id
					5.全局事件总线$bus
						订阅方	想要接收数据的一方	$on	PubSub.subscribe('MY TOPIC', mySubscriber)
						发布方	想要传递数据的一方	$emit	PubSub.publish('MY TOPIC', 'hello world!')

						前提:
							1.订阅动作必须在发布动作之前
							2.订阅方和发布方都必须同时存在

						PubSub
							如何使用npm包
							1.初始化package.json	npm init -y
							2.下载pubsub-js包		npm install pubsub-js 
							3.小程序独特配置做法
								-构建npm包	流程:微信开发者工具->工具->构建npm
								-勾选允许使用npm模块	流程:微信开发者工具->详情->本地设置->勾选"使用npm模块"
							4.引入pubsub-js包即可
						
					需求1:song页面需要从每日推荐页面获取到对应歌曲的id
						订阅方	song页面
						发布方	每日推荐页面

					需求2:每日推荐页面需要从song页面那里知道用户到底需要上一首("pre")还是下一首("next")的标识
						订阅方	每日推荐页面
						发布方	song页面


					准备工作:
						1.必须在用户点击下一首按钮之前,每日推荐页面需要绑定好消息订阅
						2.每日推荐页面需要提前存储当前歌曲的信息,方便找到下一首歌
							只需要在用户跳转到song页面之前,记录好当前歌曲的下标
						3.song页面必须在每日推荐页面返回数据之前订阅消息
						4.给上一首/下一首按钮,绑定点击事件
					流程:
						1.用户点击下一首按钮,song页面发布消息,告知每日推荐页面,用户需要的是下一首歌
							此处触发发布操作(消息名称:switchType)
								订阅方:每日推荐页面
								发布方:song页面
						2.每日推荐页面接收到数据,并根据当前的标识,找到对应的歌曲
							问题:当前这一首歌是哪一首
						3.每日推荐页面将找到的歌曲id,告知song页面
							此处触发发布操作(消息名称:sendId)
								订阅方:song页面
								发布方:每日推荐页面
						4.song页面接收到每日推荐页面发送的id,并请求歌曲信息和歌曲音频链接
						5.更新并展示歌曲信息,自动播放对应歌曲


